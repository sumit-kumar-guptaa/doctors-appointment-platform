generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model healthcare_providers {
  id               String    @id
  licenseNumber    String    @unique
  specialty        String
  verified         Boolean   @default(false)
  organization     String
  email            String    @unique
  phoneNumber      String
  address          String?
  verificationDate DateTime?
  verifiedBy       String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime
}

model medical_consultations {
  id                  String             @id
  sessionId           String             @unique
  patientAge          Int?
  patientGender       String?
  symptoms            String[]
  medicalHistory      String[]
  query               String
  aiResponse          String
  urgencyLevel        UrgencyLevel       @default(LOW)
  diagnosisConfidence Float?
  recommendedActions  String[]
  emergencyFlags      Boolean            @default(false)
  userId              String?
  createdAt           DateTime           @default(now())
  updatedAt           DateTime
  completedAt         DateTime?
  doctorId            String?
  status              ConsultationStatus @default(PENDING)
  type                ConsultationType   @default(CHAT)
  videoArchiveId      String?
  videoSessionId      String?
  users               users?             @relation(fields: [userId], references: [id])
}

model notifications {
  id        String           @id
  type      NotificationType
  title     String
  message   String
  read      Boolean          @default(false)
  userId    String
  createdAt DateTime         @default(now())
  users     users            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model patents {
  id                  String         @id
  title               String
  description         String
  abstract            String?
  category            PatentCategory
  status              PatentStatus   @default(DRAFT)
  patentNumber        String?        @unique
  applicationDate     DateTime?
  publicationDate     DateTime?
  expiryDate          DateTime?
  aiScore             Float?
  marketPotential     String?
  technicalComplexity String?
  documents           String[]
  images              String[]
  userId              String
  createdAt           DateTime       @default(now())
  updatedAt           DateTime
  users               users          @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model subscriptions {
  id                 String             @id
  planType           SubscriptionPlan
  status             SubscriptionStatus @default(ACTIVE)
  currentPeriodStart DateTime
  currentPeriodEnd   DateTime
  cancelAtPeriodEnd  Boolean            @default(false)
  maxPatents         Int
  maxConsultations   Int
  aiAnalysisEnabled  Boolean            @default(false)
  prioritySupport    Boolean            @default(false)
  userId             String
  createdAt          DateTime           @default(now())
  updatedAt          DateTime
  users              users              @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model system_analytics {
  id                  String   @id
  totalUsers          Int
  totalPatents        Int
  totalConsultations  Int
  activeUsers         Int
  aiAccuracy          Float?
  avgResponseTime     Float?
  emergencyDetections Int?
  serverUptime        Float?
  errorRate           Float?
  recordedAt          DateTime @default(now())
}

model users {
  id                    String                  @id
  clerkId               String                  @unique
  email                 String                  @unique
  firstName             String?
  lastName              String?
  imageUrl              String?
  role                  UserRole                @default(USER)
  organization          String?
  jobTitle              String?
  phoneNumber           String?
  country               String?
  createdAt             DateTime                @default(now())
  updatedAt             DateTime
  medical_consultations medical_consultations[]
  notifications         notifications[]
  patents               patents[]
  subscriptions         subscriptions[]
}

enum UserRole {
  USER
  ADMIN
  RESEARCHER
  HEALTHCARE_PROVIDER
}

enum ConsultationStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum ConsultationType {
  CHAT
  VIDEO
  ANALYSIS
  EMERGENCY
}

enum NotificationType {
  PATENT_STATUS_UPDATE
  MEDICAL_CONSULTATION
  SUBSCRIPTION_UPDATE
  SYSTEM_ANNOUNCEMENT
  AI_ANALYSIS_COMPLETE
}

enum PatentCategory {
  MEDICAL_DEVICE
  PHARMACEUTICAL
  BIOTECHNOLOGY
  DIGITAL_HEALTH
  DIAGNOSTICS
  THERAPEUTICS
  SURGICAL_INSTRUMENTS
  HEALTH_MONITORING
  AI_HEALTHCARE
  TELEMEDICINE
}

enum PatentStatus {
  DRAFT
  SUBMITTED
  UNDER_REVIEW
  APPROVED
  REJECTED
  PUBLISHED
  EXPIRED
}

enum SubscriptionPlan {
  FREE
  BASIC
  PREMIUM
  ENTERPRISE
}

enum SubscriptionStatus {
  ACTIVE
  CANCELED
  PAST_DUE
  EXPIRED
}

enum UrgencyLevel {
  LOW
  MODERATE
  HIGH
  EMERGENCY
}
